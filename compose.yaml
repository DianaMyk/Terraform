services:

  homer:
    image: b4bz/homer
    container_name: homer
    hostname: homer
    volumes:
      - /homer:/www/assets
    ports:
      - "8080:8080"
    user: 1000:1000
    environment:
      - INIT_ASSETS=1
    restart: unless-stopped
    networks:
      - proxy_net

  victorialogs:
    image: victoriametrics/victoria-logs:v1.25.0
    container_name: victorialogs
    ports:
      - "9428:9428"
    volumes:
      - /victoria-logs/victoria-logs-data:/victoria-logs-data
    command: ["-storageDataPath=victoria-logs-data", "-loggerFormat=json", "-syslog.listenAddr.tcp=0.0.0.0:8094"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:9428/health"]
      interval: 1s
      timeout: 1s
      retries: 10
    networks:
      - proxy_net

  vector:
    image: timberio/vector:latest-debian
    container_name: vector
    ports:
      - "8686:8686"
    volumes:
      - /home/deployer/docker/vector:/etc/vector:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker:/var/lib/docker:ro
    user: root
    command: ["--config", "/etc/vector/vector.yaml"]
    restart: unless-stopped
    depends_on:
      victorialogs:
        condition: service_healthy
    networks:
      - proxy_net

  certbot-init:
    image: certbot/certbot:latest
    container_name: certbot-init
    entrypoint: /bin/sh
    command:
    - -c
    - |
      if [ ! -d /etc/letsencrypt/live/homer.dimykytyn.win ]; then
        echo "No existing certs found â€” requesting new certificates..."
        certbot certonly \
          --staging \
          --standalone \
          --non-interactive \
          --agree-tos \
          --no-eff-email \
          --force-renewal \
          -m mykytyn.di@gmail.com \
          -d homer.dimykytyn.win \
          -d logs.dimykytyn.win || exit 1
      else
        echo "Certificates already exist, skipping initialization."
      fi
    ports:
      - "80:80"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - proxy_net

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      certbot-init:
        condition: service_completed_successfully
      homer:
        condition: service_started
      victorialogs:
        condition: service_started
    networks:
      - proxy_net
  

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    entrypoint: /bin/sh
    command: -c '
      echo "Starting renew loop...";
      trap exit TERM;
      while :; do
        certbot renew --staging --quiet;
        nginx -s reload 2>/dev/null || true;
        sleep 12h;
      done'
    depends_on:
      nginx:
        condition: service_started
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: unless-stopped
    networks:
      - proxy_net


  # certbot:
  #   image: certbot/certbot:latest
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   command: >
  #     sh -c "
  #       certbot certonly --webroot
  #       --webroot-path /var/www/certbot
  #       -d homer.dimykytyn.win
  #       -d logs.dimykytyn.win
  #       --email mykytyn.di@gmail.com
  #       --agree-tos
  #       --no-eff-email
  #       --non-interactive
  #       || true;
  #       echo 'Starting renew loop...';
  #       while :; do
  #         certbot renew --quiet;
  #         nginx -s reload 2>/dev/null || true;
  #         sleep 12h;
  #       done
  #     "
  #   restart: unless-stopped
  #   networks:
  #     - proxy_net

    
networks:
  proxy_net:
    driver: bridge
